/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsEnum,
  IsDate,
  IsInt,
  ValidateNested,
} from "class-validator";
import { EnumAddressAddressType } from "./EnumAddressAddressType";
import { EnumAddressCountry } from "./EnumAddressCountry";
import { Type } from "class-transformer";
import { EnumAddressIsland } from "./EnumAddressIsland";
import { User } from "../../user/base/User";

@ObjectType()
class Address {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  addressLine1!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumAddressAddressType,
  })
  @IsEnum(EnumAddressAddressType)
  @IsOptional()
  @Field(() => EnumAddressAddressType, {
    nullable: true,
  })
  addressType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumAddressCountry,
  })
  @IsEnum(EnumAddressCountry)
  @IsOptional()
  @Field(() => EnumAddressCountry, {
    nullable: true,
  })
  country?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    enum: EnumAddressIsland,
  })
  @IsEnum(EnumAddressIsland)
  @IsOptional()
  @Field(() => EnumAddressIsland, {
    nullable: true,
  })
  island?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  postalCode!: number | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;
}

export { Address as Address };

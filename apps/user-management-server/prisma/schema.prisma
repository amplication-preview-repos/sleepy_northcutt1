datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Address {
  addressLine1 String?
  addressType  EnumAddressAddressType?
  city         String?
  country      EnumAddressCountry?
  createdAt    DateTime                @default(now())
  id           String                  @id @default(cuid())
  island       EnumAddressIsland?
  postalCode   Int?
  updatedAt    DateTime                @updatedAt
  user         User?                   @relation(fields: [userId], references: [id])
  userId       String?
}

model Document {
  createdAt DateTime @default(now())
  format    String?
  id        String   @id @default(cuid())
  name      String?
  updatedAt DateTime @updatedAt
  url       String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model PersonalIdInfo {
  businessPhone    Int?
  createdAt        DateTime                          @default(now())
  id               String                            @id @default(cuid())
  jobTitle         String?
  nationality      String?
  personalIdNumber Int?
  personalIdType   EnumPersonalIdInfoPersonalIdType?
  shortJobTitle    String?
  updatedAt        DateTime                          @updatedAt
  uploadIdDocs     String?
  users            User[]
  voterId          String?
}

model Institution {
  createdAt   DateTime @default(now())
  id          String   @id @default(cuid())
  individuals String?
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  addressDetails        String?
  addresses             Address[]
  birthDate             String?
  createdAt             DateTime              @default(now())
  dateOfBirth           String?
  documentDetails       String?
  documents             Document[]
  email                 String?               @unique
  emailAddress          String?
  emailAddressOtp       String?
  emailOtp              String?
  firstName             String?
  gender                EnumUserGender?
  id                    String                @id @default(cuid())
  institution           Institution?          @relation(fields: [institutionId], references: [id])
  institutionId         String?
  lastName              String?
  mobilePhone           Int?
  mobilePhoneNumber     Int?
  otpExpires            DateTime?
  otpExpiry             DateTime?
  password              String
  personalIdInfo        PersonalIdInfo?       @relation(fields: [personalIdInfoId], references: [id])
  personalIdInfoId      String?
  personalIdInformation String?
  phoneOtp              String?
  relatedInstitution    String?
  roles                 Json
  smsOtp                String?
  updatedAt             DateTime              @updatedAt
  userCategory          EnumUserUserCategory?
  username              String                @unique
  userType              EnumUserUserType?
}

enum EnumAddressAddressType {
  Option1
}

enum EnumAddressCountry {
  Option1
}

enum EnumAddressIsland {
  Option1
}

enum EnumPersonalIdInfoPersonalIdType {
  Option1
}

enum EnumUserGender {
  Option1
}

enum EnumUserUserCategory {
  Option1
}

enum EnumUserUserType {
  Option1
}
